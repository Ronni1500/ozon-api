<?php
/**
 * Postingv3FbsPostingAnalyticsData
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * apiv1/warehouse.proto
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: release-sapi-516
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * Postingv3FbsPostingAnalyticsData Class Doc Comment
 *
 * @category    Class */
/** 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Postingv3FbsPostingAnalyticsData implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'postingv3FbsPostingAnalyticsData';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'city' => 'string',
        'delivery_date_begin' => '\DateTime',
        'delivery_date_end' => '\DateTime',
        'delivery_type' => 'string',
        'is_premium' => 'bool',
        'payment_type_group_name' => 'string',
        'region' => 'string',
        'tpl_provider' => 'string',
        'tpl_provider_id' => 'int',
        'warehouse' => 'string',
        'warehouse_id' => 'int'
    );

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'city' => 'city',
        'delivery_date_begin' => 'delivery_date_begin',
        'delivery_date_end' => 'delivery_date_end',
        'delivery_type' => 'delivery_type',
        'is_premium' => 'is_premium',
        'payment_type_group_name' => 'payment_type_group_name',
        'region' => 'region',
        'tpl_provider' => 'tpl_provider',
        'tpl_provider_id' => 'tpl_provider_id',
        'warehouse' => 'warehouse',
        'warehouse_id' => 'warehouse_id'
    );

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'city' => 'setCity',
        'delivery_date_begin' => 'setDeliveryDateBegin',
        'delivery_date_end' => 'setDeliveryDateEnd',
        'delivery_type' => 'setDeliveryType',
        'is_premium' => 'setIsPremium',
        'payment_type_group_name' => 'setPaymentTypeGroupName',
        'region' => 'setRegion',
        'tpl_provider' => 'setTplProvider',
        'tpl_provider_id' => 'setTplProviderId',
        'warehouse' => 'setWarehouse',
        'warehouse_id' => 'setWarehouseId'
    );

    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'city' => 'getCity',
        'delivery_date_begin' => 'getDeliveryDateBegin',
        'delivery_date_end' => 'getDeliveryDateEnd',
        'delivery_type' => 'getDeliveryType',
        'is_premium' => 'getIsPremium',
        'payment_type_group_name' => 'getPaymentTypeGroupName',
        'region' => 'getRegion',
        'tpl_provider' => 'getTplProvider',
        'tpl_provider_id' => 'getTplProviderId',
        'warehouse' => 'getWarehouse',
        'warehouse_id' => 'getWarehouseId'
    );

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['delivery_date_begin'] = isset($data['delivery_date_begin']) ? $data['delivery_date_begin'] : null;
        $this->container['delivery_date_end'] = isset($data['delivery_date_end']) ? $data['delivery_date_end'] : null;
        $this->container['delivery_type'] = isset($data['delivery_type']) ? $data['delivery_type'] : null;
        $this->container['is_premium'] = isset($data['is_premium']) ? $data['is_premium'] : null;
        $this->container['payment_type_group_name'] = isset($data['payment_type_group_name']) ? $data['payment_type_group_name'] : null;
        $this->container['region'] = isset($data['region']) ? $data['region'] : null;
        $this->container['tpl_provider'] = isset($data['tpl_provider']) ? $data['tpl_provider'] : null;
        $this->container['tpl_provider_id'] = isset($data['tpl_provider_id']) ? $data['tpl_provider_id'] : null;
        $this->container['warehouse'] = isset($data['warehouse']) ? $data['warehouse'] : null;
        $this->container['warehouse_id'] = isset($data['warehouse_id']) ? $data['warehouse_id'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets city
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     * @param string $city
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets delivery_date_begin
     * @return \DateTime
     */
    public function getDeliveryDateBegin()
    {
        return $this->container['delivery_date_begin'];
    }

    /**
     * Sets delivery_date_begin
     * @param \DateTime $delivery_date_begin
     * @return $this
     */
    public function setDeliveryDateBegin($delivery_date_begin)
    {
        $this->container['delivery_date_begin'] = $delivery_date_begin;

        return $this;
    }

    /**
     * Gets delivery_date_end
     * @return \DateTime
     */
    public function getDeliveryDateEnd()
    {
        return $this->container['delivery_date_end'];
    }

    /**
     * Sets delivery_date_end
     * @param \DateTime $delivery_date_end
     * @return $this
     */
    public function setDeliveryDateEnd($delivery_date_end)
    {
        $this->container['delivery_date_end'] = $delivery_date_end;

        return $this;
    }

    /**
     * Gets delivery_type
     * @return string
     */
    public function getDeliveryType()
    {
        return $this->container['delivery_type'];
    }

    /**
     * Sets delivery_type
     * @param string $delivery_type
     * @return $this
     */
    public function setDeliveryType($delivery_type)
    {
        $this->container['delivery_type'] = $delivery_type;

        return $this;
    }

    /**
     * Gets is_premium
     * @return bool
     */
    public function getIsPremium()
    {
        return $this->container['is_premium'];
    }

    /**
     * Sets is_premium
     * @param bool $is_premium
     * @return $this
     */
    public function setIsPremium($is_premium)
    {
        $this->container['is_premium'] = $is_premium;

        return $this;
    }

    /**
     * Gets payment_type_group_name
     * @return string
     */
    public function getPaymentTypeGroupName()
    {
        return $this->container['payment_type_group_name'];
    }

    /**
     * Sets payment_type_group_name
     * @param string $payment_type_group_name
     * @return $this
     */
    public function setPaymentTypeGroupName($payment_type_group_name)
    {
        $this->container['payment_type_group_name'] = $payment_type_group_name;

        return $this;
    }

    /**
     * Gets region
     * @return string
     */
    public function getRegion()
    {
        return $this->container['region'];
    }

    /**
     * Sets region
     * @param string $region
     * @return $this
     */
    public function setRegion($region)
    {
        $this->container['region'] = $region;

        return $this;
    }

    /**
     * Gets tpl_provider
     * @return string
     */
    public function getTplProvider()
    {
        return $this->container['tpl_provider'];
    }

    /**
     * Sets tpl_provider
     * @param string $tpl_provider
     * @return $this
     */
    public function setTplProvider($tpl_provider)
    {
        $this->container['tpl_provider'] = $tpl_provider;

        return $this;
    }

    /**
     * Gets tpl_provider_id
     * @return int
     */
    public function getTplProviderId()
    {
        return $this->container['tpl_provider_id'];
    }

    /**
     * Sets tpl_provider_id
     * @param int $tpl_provider_id
     * @return $this
     */
    public function setTplProviderId($tpl_provider_id)
    {
        $this->container['tpl_provider_id'] = $tpl_provider_id;

        return $this;
    }

    /**
     * Gets warehouse
     * @return string
     */
    public function getWarehouse()
    {
        return $this->container['warehouse'];
    }

    /**
     * Sets warehouse
     * @param string $warehouse
     * @return $this
     */
    public function setWarehouse($warehouse)
    {
        $this->container['warehouse'] = $warehouse;

        return $this;
    }

    /**
     * Gets warehouse_id
     * @return int
     */
    public function getWarehouseId()
    {
        return $this->container['warehouse_id'];
    }

    /**
     * Sets warehouse_id
     * @param int $warehouse_id
     * @return $this
     */
    public function setWarehouseId($warehouse_id)
    {
        $this->container['warehouse_id'] = $warehouse_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


