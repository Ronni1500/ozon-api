<?php
/**
 * ProductClassifyProductsRequestProduct
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * apiv1/warehouse.proto
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: release-sapi-516
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * ProductClassifyProductsRequestProduct Class Doc Comment
 *
 * @category    Class */
/** 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ProductClassifyProductsRequestProduct implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'productClassifyProductsRequestProduct';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'barcode' => 'string',
        'img_url' => 'string',
        'model' => 'string',
        'name' => 'string',
        'offer_id' => 'string',
        'offer_url' => 'string',
        'price' => 'string',
        'shop_category' => 'string',
        'shop_category_full_path' => 'string',
        'shop_category_id' => 'int',
        'vendor' => 'string',
        'vendor_code' => 'string'
    );

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'barcode' => 'barcode',
        'img_url' => 'img_url',
        'model' => 'model',
        'name' => 'name',
        'offer_id' => 'offer_id',
        'offer_url' => 'offer_url',
        'price' => 'price',
        'shop_category' => 'shop_category',
        'shop_category_full_path' => 'shop_category_full_path',
        'shop_category_id' => 'shop_category_id',
        'vendor' => 'vendor',
        'vendor_code' => 'vendor_code'
    );

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'barcode' => 'setBarcode',
        'img_url' => 'setImgUrl',
        'model' => 'setModel',
        'name' => 'setName',
        'offer_id' => 'setOfferId',
        'offer_url' => 'setOfferUrl',
        'price' => 'setPrice',
        'shop_category' => 'setShopCategory',
        'shop_category_full_path' => 'setShopCategoryFullPath',
        'shop_category_id' => 'setShopCategoryId',
        'vendor' => 'setVendor',
        'vendor_code' => 'setVendorCode'
    );

    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'barcode' => 'getBarcode',
        'img_url' => 'getImgUrl',
        'model' => 'getModel',
        'name' => 'getName',
        'offer_id' => 'getOfferId',
        'offer_url' => 'getOfferUrl',
        'price' => 'getPrice',
        'shop_category' => 'getShopCategory',
        'shop_category_full_path' => 'getShopCategoryFullPath',
        'shop_category_id' => 'getShopCategoryId',
        'vendor' => 'getVendor',
        'vendor_code' => 'getVendorCode'
    );

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['barcode'] = isset($data['barcode']) ? $data['barcode'] : null;
        $this->container['img_url'] = isset($data['img_url']) ? $data['img_url'] : null;
        $this->container['model'] = isset($data['model']) ? $data['model'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['offer_id'] = isset($data['offer_id']) ? $data['offer_id'] : null;
        $this->container['offer_url'] = isset($data['offer_url']) ? $data['offer_url'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['shop_category'] = isset($data['shop_category']) ? $data['shop_category'] : null;
        $this->container['shop_category_full_path'] = isset($data['shop_category_full_path']) ? $data['shop_category_full_path'] : null;
        $this->container['shop_category_id'] = isset($data['shop_category_id']) ? $data['shop_category_id'] : null;
        $this->container['vendor'] = isset($data['vendor']) ? $data['vendor'] : null;
        $this->container['vendor_code'] = isset($data['vendor_code']) ? $data['vendor_code'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets barcode
     * @return string
     */
    public function getBarcode()
    {
        return $this->container['barcode'];
    }

    /**
     * Sets barcode
     * @param string $barcode
     * @return $this
     */
    public function setBarcode($barcode)
    {
        $this->container['barcode'] = $barcode;

        return $this;
    }

    /**
     * Gets img_url
     * @return string
     */
    public function getImgUrl()
    {
        return $this->container['img_url'];
    }

    /**
     * Sets img_url
     * @param string $img_url
     * @return $this
     */
    public function setImgUrl($img_url)
    {
        $this->container['img_url'] = $img_url;

        return $this;
    }

    /**
     * Gets model
     * @return string
     */
    public function getModel()
    {
        return $this->container['model'];
    }

    /**
     * Sets model
     * @param string $model
     * @return $this
     */
    public function setModel($model)
    {
        $this->container['model'] = $model;

        return $this;
    }

    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     * @param string $name
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets offer_id
     * @return string
     */
    public function getOfferId()
    {
        return $this->container['offer_id'];
    }

    /**
     * Sets offer_id
     * @param string $offer_id
     * @return $this
     */
    public function setOfferId($offer_id)
    {
        $this->container['offer_id'] = $offer_id;

        return $this;
    }

    /**
     * Gets offer_url
     * @return string
     */
    public function getOfferUrl()
    {
        return $this->container['offer_url'];
    }

    /**
     * Sets offer_url
     * @param string $offer_url
     * @return $this
     */
    public function setOfferUrl($offer_url)
    {
        $this->container['offer_url'] = $offer_url;

        return $this;
    }

    /**
     * Gets price
     * @return string
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     * @param string $price
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets shop_category
     * @return string
     */
    public function getShopCategory()
    {
        return $this->container['shop_category'];
    }

    /**
     * Sets shop_category
     * @param string $shop_category
     * @return $this
     */
    public function setShopCategory($shop_category)
    {
        $this->container['shop_category'] = $shop_category;

        return $this;
    }

    /**
     * Gets shop_category_full_path
     * @return string
     */
    public function getShopCategoryFullPath()
    {
        return $this->container['shop_category_full_path'];
    }

    /**
     * Sets shop_category_full_path
     * @param string $shop_category_full_path
     * @return $this
     */
    public function setShopCategoryFullPath($shop_category_full_path)
    {
        $this->container['shop_category_full_path'] = $shop_category_full_path;

        return $this;
    }

    /**
     * Gets shop_category_id
     * @return int
     */
    public function getShopCategoryId()
    {
        return $this->container['shop_category_id'];
    }

    /**
     * Sets shop_category_id
     * @param int $shop_category_id
     * @return $this
     */
    public function setShopCategoryId($shop_category_id)
    {
        $this->container['shop_category_id'] = $shop_category_id;

        return $this;
    }

    /**
     * Gets vendor
     * @return string
     */
    public function getVendor()
    {
        return $this->container['vendor'];
    }

    /**
     * Sets vendor
     * @param string $vendor
     * @return $this
     */
    public function setVendor($vendor)
    {
        $this->container['vendor'] = $vendor;

        return $this;
    }

    /**
     * Gets vendor_code
     * @return string
     */
    public function getVendorCode()
    {
        return $this->container['vendor_code'];
    }

    /**
     * Sets vendor_code
     * @param string $vendor_code
     * @return $this
     */
    public function setVendorCode($vendor_code)
    {
        $this->container['vendor_code'] = $vendor_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


