<?php
/**
 * Postingv3FbsPosting
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * apiv1/warehouse.proto
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: release-sapi-516
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * Postingv3FbsPosting Class Doc Comment
 *
 * @category    Class */
/** 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Postingv3FbsPosting implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'postingv3FbsPosting';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'addressee' => '\Swagger\Client\Model\Postingv3Addressee',
        'analytics_data' => '\Swagger\Client\Model\Postingv3FbsPostingAnalyticsData',
        'barcodes' => '\Swagger\Client\Model\Postingv3Barcodes',
        'cancellation' => '\Swagger\Client\Model\Postingv3Cancellation',
        'customer' => '\Swagger\Client\Model\Postingv3Customer',
        'delivering_date' => '\DateTime',
        'delivery_method' => '\Swagger\Client\Model\Postingv3DeliveryMethod',
        'financial_data' => '\Swagger\Client\Model\Postingv3PostingFinancialData',
        'in_process_at' => '\DateTime',
        'order_id' => 'int',
        'order_number' => 'string',
        'posting_number' => 'string',
        'products' => '\Swagger\Client\Model\Postingv3FbsPostingProduct[]',
        'shipment_date' => '\DateTime',
        'status' => 'string',
        'tpl_integration_type' => 'string',
        'tracking_number' => 'string'
    );

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'addressee' => 'addressee',
        'analytics_data' => 'analytics_data',
        'barcodes' => 'barcodes',
        'cancellation' => 'cancellation',
        'customer' => 'customer',
        'delivering_date' => 'delivering_date',
        'delivery_method' => 'delivery_method',
        'financial_data' => 'financial_data',
        'in_process_at' => 'in_process_at',
        'order_id' => 'order_id',
        'order_number' => 'order_number',
        'posting_number' => 'posting_number',
        'products' => 'products',
        'shipment_date' => 'shipment_date',
        'status' => 'status',
        'tpl_integration_type' => 'tpl_integration_type',
        'tracking_number' => 'tracking_number'
    );

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'addressee' => 'setAddressee',
        'analytics_data' => 'setAnalyticsData',
        'barcodes' => 'setBarcodes',
        'cancellation' => 'setCancellation',
        'customer' => 'setCustomer',
        'delivering_date' => 'setDeliveringDate',
        'delivery_method' => 'setDeliveryMethod',
        'financial_data' => 'setFinancialData',
        'in_process_at' => 'setInProcessAt',
        'order_id' => 'setOrderId',
        'order_number' => 'setOrderNumber',
        'posting_number' => 'setPostingNumber',
        'products' => 'setProducts',
        'shipment_date' => 'setShipmentDate',
        'status' => 'setStatus',
        'tpl_integration_type' => 'setTplIntegrationType',
        'tracking_number' => 'setTrackingNumber'
    );

    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'addressee' => 'getAddressee',
        'analytics_data' => 'getAnalyticsData',
        'barcodes' => 'getBarcodes',
        'cancellation' => 'getCancellation',
        'customer' => 'getCustomer',
        'delivering_date' => 'getDeliveringDate',
        'delivery_method' => 'getDeliveryMethod',
        'financial_data' => 'getFinancialData',
        'in_process_at' => 'getInProcessAt',
        'order_id' => 'getOrderId',
        'order_number' => 'getOrderNumber',
        'posting_number' => 'getPostingNumber',
        'products' => 'getProducts',
        'shipment_date' => 'getShipmentDate',
        'status' => 'getStatus',
        'tpl_integration_type' => 'getTplIntegrationType',
        'tracking_number' => 'getTrackingNumber'
    );

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['addressee'] = isset($data['addressee']) ? $data['addressee'] : null;
        $this->container['analytics_data'] = isset($data['analytics_data']) ? $data['analytics_data'] : null;
        $this->container['barcodes'] = isset($data['barcodes']) ? $data['barcodes'] : null;
        $this->container['cancellation'] = isset($data['cancellation']) ? $data['cancellation'] : null;
        $this->container['customer'] = isset($data['customer']) ? $data['customer'] : null;
        $this->container['delivering_date'] = isset($data['delivering_date']) ? $data['delivering_date'] : null;
        $this->container['delivery_method'] = isset($data['delivery_method']) ? $data['delivery_method'] : null;
        $this->container['financial_data'] = isset($data['financial_data']) ? $data['financial_data'] : null;
        $this->container['in_process_at'] = isset($data['in_process_at']) ? $data['in_process_at'] : null;
        $this->container['order_id'] = isset($data['order_id']) ? $data['order_id'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['posting_number'] = isset($data['posting_number']) ? $data['posting_number'] : null;
        $this->container['products'] = isset($data['products']) ? $data['products'] : null;
        $this->container['shipment_date'] = isset($data['shipment_date']) ? $data['shipment_date'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['tpl_integration_type'] = isset($data['tpl_integration_type']) ? $data['tpl_integration_type'] : null;
        $this->container['tracking_number'] = isset($data['tracking_number']) ? $data['tracking_number'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets addressee
     * @return \Swagger\Client\Model\Postingv3Addressee
     */
    public function getAddressee()
    {
        return $this->container['addressee'];
    }

    /**
     * Sets addressee
     * @param \Swagger\Client\Model\Postingv3Addressee $addressee
     * @return $this
     */
    public function setAddressee($addressee)
    {
        $this->container['addressee'] = $addressee;

        return $this;
    }

    /**
     * Gets analytics_data
     * @return \Swagger\Client\Model\Postingv3FbsPostingAnalyticsData
     */
    public function getAnalyticsData()
    {
        return $this->container['analytics_data'];
    }

    /**
     * Sets analytics_data
     * @param \Swagger\Client\Model\Postingv3FbsPostingAnalyticsData $analytics_data
     * @return $this
     */
    public function setAnalyticsData($analytics_data)
    {
        $this->container['analytics_data'] = $analytics_data;

        return $this;
    }

    /**
     * Gets barcodes
     * @return \Swagger\Client\Model\Postingv3Barcodes
     */
    public function getBarcodes()
    {
        return $this->container['barcodes'];
    }

    /**
     * Sets barcodes
     * @param \Swagger\Client\Model\Postingv3Barcodes $barcodes
     * @return $this
     */
    public function setBarcodes($barcodes)
    {
        $this->container['barcodes'] = $barcodes;

        return $this;
    }

    /**
     * Gets cancellation
     * @return \Swagger\Client\Model\Postingv3Cancellation
     */
    public function getCancellation()
    {
        return $this->container['cancellation'];
    }

    /**
     * Sets cancellation
     * @param \Swagger\Client\Model\Postingv3Cancellation $cancellation
     * @return $this
     */
    public function setCancellation($cancellation)
    {
        $this->container['cancellation'] = $cancellation;

        return $this;
    }

    /**
     * Gets customer
     * @return \Swagger\Client\Model\Postingv3Customer
     */
    public function getCustomer()
    {
        return $this->container['customer'];
    }

    /**
     * Sets customer
     * @param \Swagger\Client\Model\Postingv3Customer $customer
     * @return $this
     */
    public function setCustomer($customer)
    {
        $this->container['customer'] = $customer;

        return $this;
    }

    /**
     * Gets delivering_date
     * @return \DateTime
     */
    public function getDeliveringDate()
    {
        return $this->container['delivering_date'];
    }

    /**
     * Sets delivering_date
     * @param \DateTime $delivering_date
     * @return $this
     */
    public function setDeliveringDate($delivering_date)
    {
        $this->container['delivering_date'] = $delivering_date;

        return $this;
    }

    /**
     * Gets delivery_method
     * @return \Swagger\Client\Model\Postingv3DeliveryMethod
     */
    public function getDeliveryMethod()
    {
        return $this->container['delivery_method'];
    }

    /**
     * Sets delivery_method
     * @param \Swagger\Client\Model\Postingv3DeliveryMethod $delivery_method
     * @return $this
     */
    public function setDeliveryMethod($delivery_method)
    {
        $this->container['delivery_method'] = $delivery_method;

        return $this;
    }

    /**
     * Gets financial_data
     * @return \Swagger\Client\Model\Postingv3PostingFinancialData
     */
    public function getFinancialData()
    {
        return $this->container['financial_data'];
    }

    /**
     * Sets financial_data
     * @param \Swagger\Client\Model\Postingv3PostingFinancialData $financial_data
     * @return $this
     */
    public function setFinancialData($financial_data)
    {
        $this->container['financial_data'] = $financial_data;

        return $this;
    }

    /**
     * Gets in_process_at
     * @return \DateTime
     */
    public function getInProcessAt()
    {
        return $this->container['in_process_at'];
    }

    /**
     * Sets in_process_at
     * @param \DateTime $in_process_at
     * @return $this
     */
    public function setInProcessAt($in_process_at)
    {
        $this->container['in_process_at'] = $in_process_at;

        return $this;
    }

    /**
     * Gets order_id
     * @return int
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     * @param int $order_id
     * @return $this
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets order_number
     * @return string
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     * @param string $order_number
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets posting_number
     * @return string
     */
    public function getPostingNumber()
    {
        return $this->container['posting_number'];
    }

    /**
     * Sets posting_number
     * @param string $posting_number
     * @return $this
     */
    public function setPostingNumber($posting_number)
    {
        $this->container['posting_number'] = $posting_number;

        return $this;
    }

    /**
     * Gets products
     * @return \Swagger\Client\Model\Postingv3FbsPostingProduct[]
     */
    public function getProducts()
    {
        return $this->container['products'];
    }

    /**
     * Sets products
     * @param \Swagger\Client\Model\Postingv3FbsPostingProduct[] $products
     * @return $this
     */
    public function setProducts($products)
    {
        $this->container['products'] = $products;

        return $this;
    }

    /**
     * Gets shipment_date
     * @return \DateTime
     */
    public function getShipmentDate()
    {
        return $this->container['shipment_date'];
    }

    /**
     * Sets shipment_date
     * @param \DateTime $shipment_date
     * @return $this
     */
    public function setShipmentDate($shipment_date)
    {
        $this->container['shipment_date'] = $shipment_date;

        return $this;
    }

    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param string $status
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets tpl_integration_type
     * @return string
     */
    public function getTplIntegrationType()
    {
        return $this->container['tpl_integration_type'];
    }

    /**
     * Sets tpl_integration_type
     * @param string $tpl_integration_type
     * @return $this
     */
    public function setTplIntegrationType($tpl_integration_type)
    {
        $this->container['tpl_integration_type'] = $tpl_integration_type;

        return $this;
    }

    /**
     * Gets tracking_number
     * @return string
     */
    public function getTrackingNumber()
    {
        return $this->container['tracking_number'];
    }

    /**
     * Sets tracking_number
     * @param string $tracking_number
     * @return $this
     */
    public function setTrackingNumber($tracking_number)
    {
        $this->container['tracking_number'] = $tracking_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


