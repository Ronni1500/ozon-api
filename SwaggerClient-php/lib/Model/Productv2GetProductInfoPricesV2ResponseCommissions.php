<?php
/**
 * Productv2GetProductInfoPricesV2ResponseCommissions
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * apiv1/warehouse.proto
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: release-sapi-516
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * Productv2GetProductInfoPricesV2ResponseCommissions Class Doc Comment
 *
 * @category    Class */
/** 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Productv2GetProductInfoPricesV2ResponseCommissions implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'productv2GetProductInfoPricesV2ResponseCommissions';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'fbo_deliv_to_customer_amount' => 'double',
        'fbo_direct_flow_trans_max_amount' => 'double',
        'fbo_direct_flow_trans_min_amount' => 'double',
        'fbo_fulfillment_amount' => 'double',
        'fbo_return_flow_amount' => 'double',
        'fbs_deliv_to_customer_amount' => 'double',
        'fbs_direct_flow_trans_max_amount' => 'double',
        'fbs_direct_flow_trans_min_amount' => 'double',
        'fbs_fist_mile_amount' => 'double',
        'fbs_return_flow_amount' => 'double',
        'fbs_return_flow_trans_max_amount' => 'double',
        'fbs_return_flow_trans_min_amount' => 'double',
        'sales_percent' => 'double'
    );

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'fbo_deliv_to_customer_amount' => 'fbo_deliv_to_customer_amount',
        'fbo_direct_flow_trans_max_amount' => 'fbo_direct_flow_trans_max_amount',
        'fbo_direct_flow_trans_min_amount' => 'fbo_direct_flow_trans_min_amount',
        'fbo_fulfillment_amount' => 'fbo_fulfillment_amount',
        'fbo_return_flow_amount' => 'fbo_return_flow_amount',
        'fbs_deliv_to_customer_amount' => 'fbs_deliv_to_customer_amount',
        'fbs_direct_flow_trans_max_amount' => 'fbs_direct_flow_trans_max_amount',
        'fbs_direct_flow_trans_min_amount' => 'fbs_direct_flow_trans_min_amount',
        'fbs_fist_mile_amount' => 'fbs_fist_mile_amount',
        'fbs_return_flow_amount' => 'fbs_return_flow_amount',
        'fbs_return_flow_trans_max_amount' => 'fbs_return_flow_trans_max_amount',
        'fbs_return_flow_trans_min_amount' => 'fbs_return_flow_trans_min_amount',
        'sales_percent' => 'sales_percent'
    );

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'fbo_deliv_to_customer_amount' => 'setFboDelivToCustomerAmount',
        'fbo_direct_flow_trans_max_amount' => 'setFboDirectFlowTransMaxAmount',
        'fbo_direct_flow_trans_min_amount' => 'setFboDirectFlowTransMinAmount',
        'fbo_fulfillment_amount' => 'setFboFulfillmentAmount',
        'fbo_return_flow_amount' => 'setFboReturnFlowAmount',
        'fbs_deliv_to_customer_amount' => 'setFbsDelivToCustomerAmount',
        'fbs_direct_flow_trans_max_amount' => 'setFbsDirectFlowTransMaxAmount',
        'fbs_direct_flow_trans_min_amount' => 'setFbsDirectFlowTransMinAmount',
        'fbs_fist_mile_amount' => 'setFbsFistMileAmount',
        'fbs_return_flow_amount' => 'setFbsReturnFlowAmount',
        'fbs_return_flow_trans_max_amount' => 'setFbsReturnFlowTransMaxAmount',
        'fbs_return_flow_trans_min_amount' => 'setFbsReturnFlowTransMinAmount',
        'sales_percent' => 'setSalesPercent'
    );

    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'fbo_deliv_to_customer_amount' => 'getFboDelivToCustomerAmount',
        'fbo_direct_flow_trans_max_amount' => 'getFboDirectFlowTransMaxAmount',
        'fbo_direct_flow_trans_min_amount' => 'getFboDirectFlowTransMinAmount',
        'fbo_fulfillment_amount' => 'getFboFulfillmentAmount',
        'fbo_return_flow_amount' => 'getFboReturnFlowAmount',
        'fbs_deliv_to_customer_amount' => 'getFbsDelivToCustomerAmount',
        'fbs_direct_flow_trans_max_amount' => 'getFbsDirectFlowTransMaxAmount',
        'fbs_direct_flow_trans_min_amount' => 'getFbsDirectFlowTransMinAmount',
        'fbs_fist_mile_amount' => 'getFbsFistMileAmount',
        'fbs_return_flow_amount' => 'getFbsReturnFlowAmount',
        'fbs_return_flow_trans_max_amount' => 'getFbsReturnFlowTransMaxAmount',
        'fbs_return_flow_trans_min_amount' => 'getFbsReturnFlowTransMinAmount',
        'sales_percent' => 'getSalesPercent'
    );

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['fbo_deliv_to_customer_amount'] = isset($data['fbo_deliv_to_customer_amount']) ? $data['fbo_deliv_to_customer_amount'] : null;
        $this->container['fbo_direct_flow_trans_max_amount'] = isset($data['fbo_direct_flow_trans_max_amount']) ? $data['fbo_direct_flow_trans_max_amount'] : null;
        $this->container['fbo_direct_flow_trans_min_amount'] = isset($data['fbo_direct_flow_trans_min_amount']) ? $data['fbo_direct_flow_trans_min_amount'] : null;
        $this->container['fbo_fulfillment_amount'] = isset($data['fbo_fulfillment_amount']) ? $data['fbo_fulfillment_amount'] : null;
        $this->container['fbo_return_flow_amount'] = isset($data['fbo_return_flow_amount']) ? $data['fbo_return_flow_amount'] : null;
        $this->container['fbs_deliv_to_customer_amount'] = isset($data['fbs_deliv_to_customer_amount']) ? $data['fbs_deliv_to_customer_amount'] : null;
        $this->container['fbs_direct_flow_trans_max_amount'] = isset($data['fbs_direct_flow_trans_max_amount']) ? $data['fbs_direct_flow_trans_max_amount'] : null;
        $this->container['fbs_direct_flow_trans_min_amount'] = isset($data['fbs_direct_flow_trans_min_amount']) ? $data['fbs_direct_flow_trans_min_amount'] : null;
        $this->container['fbs_fist_mile_amount'] = isset($data['fbs_fist_mile_amount']) ? $data['fbs_fist_mile_amount'] : null;
        $this->container['fbs_return_flow_amount'] = isset($data['fbs_return_flow_amount']) ? $data['fbs_return_flow_amount'] : null;
        $this->container['fbs_return_flow_trans_max_amount'] = isset($data['fbs_return_flow_trans_max_amount']) ? $data['fbs_return_flow_trans_max_amount'] : null;
        $this->container['fbs_return_flow_trans_min_amount'] = isset($data['fbs_return_flow_trans_min_amount']) ? $data['fbs_return_flow_trans_min_amount'] : null;
        $this->container['sales_percent'] = isset($data['sales_percent']) ? $data['sales_percent'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets fbo_deliv_to_customer_amount
     * @return double
     */
    public function getFboDelivToCustomerAmount()
    {
        return $this->container['fbo_deliv_to_customer_amount'];
    }

    /**
     * Sets fbo_deliv_to_customer_amount
     * @param double $fbo_deliv_to_customer_amount
     * @return $this
     */
    public function setFboDelivToCustomerAmount($fbo_deliv_to_customer_amount)
    {
        $this->container['fbo_deliv_to_customer_amount'] = $fbo_deliv_to_customer_amount;

        return $this;
    }

    /**
     * Gets fbo_direct_flow_trans_max_amount
     * @return double
     */
    public function getFboDirectFlowTransMaxAmount()
    {
        return $this->container['fbo_direct_flow_trans_max_amount'];
    }

    /**
     * Sets fbo_direct_flow_trans_max_amount
     * @param double $fbo_direct_flow_trans_max_amount
     * @return $this
     */
    public function setFboDirectFlowTransMaxAmount($fbo_direct_flow_trans_max_amount)
    {
        $this->container['fbo_direct_flow_trans_max_amount'] = $fbo_direct_flow_trans_max_amount;

        return $this;
    }

    /**
     * Gets fbo_direct_flow_trans_min_amount
     * @return double
     */
    public function getFboDirectFlowTransMinAmount()
    {
        return $this->container['fbo_direct_flow_trans_min_amount'];
    }

    /**
     * Sets fbo_direct_flow_trans_min_amount
     * @param double $fbo_direct_flow_trans_min_amount
     * @return $this
     */
    public function setFboDirectFlowTransMinAmount($fbo_direct_flow_trans_min_amount)
    {
        $this->container['fbo_direct_flow_trans_min_amount'] = $fbo_direct_flow_trans_min_amount;

        return $this;
    }

    /**
     * Gets fbo_fulfillment_amount
     * @return double
     */
    public function getFboFulfillmentAmount()
    {
        return $this->container['fbo_fulfillment_amount'];
    }

    /**
     * Sets fbo_fulfillment_amount
     * @param double $fbo_fulfillment_amount
     * @return $this
     */
    public function setFboFulfillmentAmount($fbo_fulfillment_amount)
    {
        $this->container['fbo_fulfillment_amount'] = $fbo_fulfillment_amount;

        return $this;
    }

    /**
     * Gets fbo_return_flow_amount
     * @return double
     */
    public function getFboReturnFlowAmount()
    {
        return $this->container['fbo_return_flow_amount'];
    }

    /**
     * Sets fbo_return_flow_amount
     * @param double $fbo_return_flow_amount
     * @return $this
     */
    public function setFboReturnFlowAmount($fbo_return_flow_amount)
    {
        $this->container['fbo_return_flow_amount'] = $fbo_return_flow_amount;

        return $this;
    }

    /**
     * Gets fbs_deliv_to_customer_amount
     * @return double
     */
    public function getFbsDelivToCustomerAmount()
    {
        return $this->container['fbs_deliv_to_customer_amount'];
    }

    /**
     * Sets fbs_deliv_to_customer_amount
     * @param double $fbs_deliv_to_customer_amount
     * @return $this
     */
    public function setFbsDelivToCustomerAmount($fbs_deliv_to_customer_amount)
    {
        $this->container['fbs_deliv_to_customer_amount'] = $fbs_deliv_to_customer_amount;

        return $this;
    }

    /**
     * Gets fbs_direct_flow_trans_max_amount
     * @return double
     */
    public function getFbsDirectFlowTransMaxAmount()
    {
        return $this->container['fbs_direct_flow_trans_max_amount'];
    }

    /**
     * Sets fbs_direct_flow_trans_max_amount
     * @param double $fbs_direct_flow_trans_max_amount
     * @return $this
     */
    public function setFbsDirectFlowTransMaxAmount($fbs_direct_flow_trans_max_amount)
    {
        $this->container['fbs_direct_flow_trans_max_amount'] = $fbs_direct_flow_trans_max_amount;

        return $this;
    }

    /**
     * Gets fbs_direct_flow_trans_min_amount
     * @return double
     */
    public function getFbsDirectFlowTransMinAmount()
    {
        return $this->container['fbs_direct_flow_trans_min_amount'];
    }

    /**
     * Sets fbs_direct_flow_trans_min_amount
     * @param double $fbs_direct_flow_trans_min_amount
     * @return $this
     */
    public function setFbsDirectFlowTransMinAmount($fbs_direct_flow_trans_min_amount)
    {
        $this->container['fbs_direct_flow_trans_min_amount'] = $fbs_direct_flow_trans_min_amount;

        return $this;
    }

    /**
     * Gets fbs_fist_mile_amount
     * @return double
     */
    public function getFbsFistMileAmount()
    {
        return $this->container['fbs_fist_mile_amount'];
    }

    /**
     * Sets fbs_fist_mile_amount
     * @param double $fbs_fist_mile_amount
     * @return $this
     */
    public function setFbsFistMileAmount($fbs_fist_mile_amount)
    {
        $this->container['fbs_fist_mile_amount'] = $fbs_fist_mile_amount;

        return $this;
    }

    /**
     * Gets fbs_return_flow_amount
     * @return double
     */
    public function getFbsReturnFlowAmount()
    {
        return $this->container['fbs_return_flow_amount'];
    }

    /**
     * Sets fbs_return_flow_amount
     * @param double $fbs_return_flow_amount
     * @return $this
     */
    public function setFbsReturnFlowAmount($fbs_return_flow_amount)
    {
        $this->container['fbs_return_flow_amount'] = $fbs_return_flow_amount;

        return $this;
    }

    /**
     * Gets fbs_return_flow_trans_max_amount
     * @return double
     */
    public function getFbsReturnFlowTransMaxAmount()
    {
        return $this->container['fbs_return_flow_trans_max_amount'];
    }

    /**
     * Sets fbs_return_flow_trans_max_amount
     * @param double $fbs_return_flow_trans_max_amount
     * @return $this
     */
    public function setFbsReturnFlowTransMaxAmount($fbs_return_flow_trans_max_amount)
    {
        $this->container['fbs_return_flow_trans_max_amount'] = $fbs_return_flow_trans_max_amount;

        return $this;
    }

    /**
     * Gets fbs_return_flow_trans_min_amount
     * @return double
     */
    public function getFbsReturnFlowTransMinAmount()
    {
        return $this->container['fbs_return_flow_trans_min_amount'];
    }

    /**
     * Sets fbs_return_flow_trans_min_amount
     * @param double $fbs_return_flow_trans_min_amount
     * @return $this
     */
    public function setFbsReturnFlowTransMinAmount($fbs_return_flow_trans_min_amount)
    {
        $this->container['fbs_return_flow_trans_min_amount'] = $fbs_return_flow_trans_min_amount;

        return $this;
    }

    /**
     * Gets sales_percent
     * @return double
     */
    public function getSalesPercent()
    {
        return $this->container['sales_percent'];
    }

    /**
     * Sets sales_percent
     * @param double $sales_percent
     * @return $this
     */
    public function setSalesPercent($sales_percent)
    {
        $this->container['sales_percent'] = $sales_percent;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


